/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.0.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.UserDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-01-17T18:11:48.695722-08:00[America/Los_Angeles]")
@Validated
@Api(value = "login", description = "the login API")
public interface LoginApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /login : Log in to the system
     *
     * @param userDto  (required)
     * @return Successful Login (status code 200)
     *         or Unauthorized (status code 401)
     */
    @ApiOperation(value = "Log in to the system", nickname = "login", notes = "", response = String.class, authorizations = {
        
        @Authorization(value = "bearerAuth")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Successful Login", response = String.class),
        @ApiResponse(code = 401, message = "Unauthorized") })
    @PostMapping(
        value = "/login",
        produces = { "applicaton/text" },
        consumes = { "application/json" }
    )
    default ResponseEntity<String> login(@ApiParam(value = "" ,required=true )  @Valid @RequestBody UserDto userDto) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
